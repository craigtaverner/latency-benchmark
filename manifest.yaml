kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: neo4j-client-benchmark
  namespace: default
rules:
  - apiGroups:
      - "neo4j.io"
    resources:
      - "neo4jdatabases"
    verbs:
      - "list"
      - "get"
      - "patch"
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: neo4j-client-benchmark
  namespace: default
imagePullSecrets:
  - name: gcr-json-key
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: neo4j-client-benchmark
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: neo4j-client-benchmark
subjects:
  - kind: ServiceAccount
    name: neo4j-client-benchmark
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neo4j-client-benchmark
spec:
  revisionHistoryLimit: 1
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: neo4j-client-benchmark
  template:
    metadata:
      labels:
        app: neo4j-client-benchmark
    spec:
      serviceAccountName: neo4j-client-benchmark
      imagePullSecrets:
        - name: gcr-json-key
      containers:
        - name: neo4j-client-benchmark
          image: _IMAGE_ID
          resources:
            requests:
              cpu: "100m"
              memory: "100Mi"
            limits:
              cpu: "100m"
              memory: "100Mi"
          env:
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  key: ENVIRONMENT
                  name: orchestra-environment
            - name: IS_PRODUCTION_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  key: IS_PRODUCTION_ENVIRONMENT
                  name: orchestra-environment
            - name: ONLY_DATABASES_WITH_CHAOS_ENABLED
              value: "_ONLY_DATABASES_WITH_CHAOS_ENABLED"
